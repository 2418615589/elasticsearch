// tag::ccr-uni-directional-version-compatibility-matrix[]
[cols="^,^,^,^,^"]
|====
| 4+^h| Follower
h| Leader             | 6.8           | 7.1–7.16      | 7.17          | 8.0–{minor-version}
| 6.8                 | {yes-icon}^*^ | {yes-icon}    | {yes-icon}    | {no-icon}
| 7.1–7.16            | {no-icon}     | {yes-icon}^*^ | {yes-icon}    | {no-icon}
| 7.17                | {no-icon}     | {no-icon}     | {yes-icon}^*^ | {yes-icon}
| 8.0–{minor-version} | {no-icon}     | {no-icon}     | {no-icon}     | {yes-icon}^*^
|====

^*^ For versions ranges like `7.1-7.16`, the follower must be running the same or newer version as the leader.

ifeval::["{release-state}"!="released"]
NOTE: This documentation is for {es} version {version}, which is not yet
released. The above compatibility table applies if both clusters are running a
released version of {es}, or if one of the clusters is running a released
version and the other is running a pre-release build with a later build date. A
cluster running a pre-release build of {es} can also communicate with remote
clusters running the same pre-release build. Running a mix of pre-release
builds is unsupported and typically will not work, even if the builds have the
same version number.
endif::[]

// end::ccr-uni-directional-version-compatibility-matrix[]
