/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.java'
apply plugin: 'elasticsearch.test.fixtures'
apply plugin: 'java-test-fixtures'

description = 'Fixture for S3 Storage service'
tasks.named("test").configure { enabled = false }

configurations {
  testFixturesImplementation.transitive = false
  testFixturesRuntimeOnly.transitive = false
  testFixturesRuntimeClasspath.transitive = false
  testFixturesRuntimeElements.transitive = false
}

dependencies {
  api project(':server')
  testImplementation project(':test:framework')

  testFixturesApi "junit:junit:${versions.junit}"
  testFixturesImplementation project(':test:framework')
  testFixturesImplementation 'com.github.docker-java:docker-java-transport-zerodep:3.3.4'
  testFixturesImplementation 'com.github.docker-java:docker-java-transport:3.3.4'
  testFixturesImplementation 'org.apache.commons:commons-compress:1.24.0'
  testFixturesImplementation 'org.rnorth.duct-tape:duct-tape:1.0.8'
  testFixturesImplementation 'com.github.docker-java:docker-java-api:3.3.4'
  testFixturesImplementation 'com.github.docker-java:docker-java-core:3.3.4'
  testFixturesImplementation 'org.testcontainers:testcontainers:1.19.2' //replace with the latest version
  testFixturesImplementation 'org.slf4j:slf4j-api:1.7.36'
  testFixturesRuntimeOnly 'org.slf4j:slf4j-simple:1.7.36'
}

tasks.named("preProcessFixture").configure {
  dependsOn "jar", configurations.runtimeClasspath
  doLast {
    file("${testFixturesDir}/shared").mkdirs()
    project.copy {
      from jar
      from configurations.runtimeClasspath
      into "${testFixturesDir}/shared"
    }
  }
}
